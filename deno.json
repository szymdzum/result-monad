{
  "name": "@szymdzum/result-monad",
  "version": "0.1.1",
  "license": "MIT",
  "exports": "./mod.ts",
  "description": "A comprehensive Result type implementation for TypeScript with robust error handling and composition utilities",
  "repository": {
    "type": "git",
    "url": "https://github.com/szymdzum/result-monad"
  },
  "keywords": [
    "typescript",
    "result",
    "monad",
    "functional",
    "error-handling",
    "deno"
  ],
  "jsr": {
    "docs": {
      "custom": {
        "introduction": "./docs/01-what-is-a-monad.md",
        "pages": [
          {
            "title": "Basic Usage",
            "path": "./docs/02-basic-usage.md"
          },
          {
            "title": "Error Handling",
            "path": "./docs/03-error-handling.md"
          },
          {
            "title": "Async Patterns",
            "path": "./docs/04-async-patterns.md"
          },
          {
            "title": "Validation",
            "path": "./docs/05-validation.md"
          },
          {
            "title": "Functional Composition",
            "path": "./docs/06-functional-composition.md"
          }
        ]
      }
    }
  },
  "tasks": {
    "test": "deno test --no-check",
    "check": "deno check mod.ts",
    "lint": "deno lint",
    "fmt": "deno fmt",
    "coverage": "deno test --coverage=cov_profile --no-check && deno coverage cov_profile",
    "publish": "deno publish --dry-run",
    "test:changed": "./scripts/test-changed.sh",
    "lint:changed": "./scripts/lint-changed.sh",
    "fmt:changed": "./scripts/fmt-changed.sh"
  },
  "fmt": {
    "indentWidth": 2,
    "singleQuote": true,
    "lineWidth": 100,
    "proseWrap": "always"
  },
  "lint": {
    "rules": {
      "include": [
        "explicit-function-return-type",
        "explicit-module-boundary-types",
        "ban-untagged-todo"
      ]
    }
  },
  "exclude": [
    "coverage",
    ".vscode",
    "cov_profile"
  ],
  "compilerOptions": {
    "strict": true,
    "lib": ["deno.window"],
    "noImplicitAny": true,
    "noImplicitThis": true,
    "strictNullChecks": true,
    "strictFunctionTypes": true
  },
  "publish": {
    "include": [
      "LICENSE",
      "README.md",
      "src/**/*.ts",
      "mod.ts",
      "docs/**/*"
    ],
    "exclude": [
      "**/*.test.ts",
      "tests/"
    ]
  },
  "imports": {
    "jsr:@std/assert": "jsr:@std/assert@^1.0.12"
  },
  "npmRegistry": {
    "provenance": true
  }
}
